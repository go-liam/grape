// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notice.proto

package notice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthReq struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthReq) Reset()         { *m = HealthReq{} }
func (m *HealthReq) String() string { return proto.CompactTextString(m) }
func (*HealthReq) ProtoMessage()    {}
func (*HealthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{0}
}

func (m *HealthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthReq.Unmarshal(m, b)
}
func (m *HealthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthReq.Marshal(b, m, deterministic)
}
func (m *HealthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthReq.Merge(m, src)
}
func (m *HealthReq) XXX_Size() int {
	return xxx_messageInfo_HealthReq.Size(m)
}
func (m *HealthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthReq.DiscardUnknown(m)
}

var xxx_messageInfo_HealthReq proto.InternalMessageInfo

func (m *HealthReq) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

type HealthResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ServerName           string   `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Version              string   `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResp) Reset()         { *m = HealthResp{} }
func (m *HealthResp) String() string { return proto.CompactTextString(m) }
func (*HealthResp) ProtoMessage()    {}
func (*HealthResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{1}
}

func (m *HealthResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResp.Unmarshal(m, b)
}
func (m *HealthResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResp.Marshal(b, m, deterministic)
}
func (m *HealthResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResp.Merge(m, src)
}
func (m *HealthResp) XXX_Size() int {
	return xxx_messageInfo_HealthResp.Size(m)
}
func (m *HealthResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResp.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResp proto.InternalMessageInfo

func (m *HealthResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HealthResp) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *HealthResp) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *HealthResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type EmailReq struct {
	EmailType            string   `protobuf:"bytes,1,opt,name=emailType,proto3" json:"emailType,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	FromName             string   `protobuf:"bytes,3,opt,name=fromName,proto3" json:"fromName,omitempty"`
	Subject              string   `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Type                 string   `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Body                 string   `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailReq) Reset()         { *m = EmailReq{} }
func (m *EmailReq) String() string { return proto.CompactTextString(m) }
func (*EmailReq) ProtoMessage()    {}
func (*EmailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{2}
}

func (m *EmailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailReq.Unmarshal(m, b)
}
func (m *EmailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailReq.Marshal(b, m, deterministic)
}
func (m *EmailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailReq.Merge(m, src)
}
func (m *EmailReq) XXX_Size() int {
	return xxx_messageInfo_EmailReq.Size(m)
}
func (m *EmailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmailReq proto.InternalMessageInfo

func (m *EmailReq) GetEmailType() string {
	if m != nil {
		return m.EmailType
	}
	return ""
}

func (m *EmailReq) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *EmailReq) GetFromName() string {
	if m != nil {
		return m.FromName
	}
	return ""
}

func (m *EmailReq) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailReq) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EmailReq) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type EmailResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailResp) Reset()         { *m = EmailResp{} }
func (m *EmailResp) String() string { return proto.CompactTextString(m) }
func (*EmailResp) ProtoMessage()    {}
func (*EmailResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{3}
}

func (m *EmailResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailResp.Unmarshal(m, b)
}
func (m *EmailResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailResp.Marshal(b, m, deterministic)
}
func (m *EmailResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailResp.Merge(m, src)
}
func (m *EmailResp) XXX_Size() int {
	return xxx_messageInfo_EmailResp.Size(m)
}
func (m *EmailResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailResp.DiscardUnknown(m)
}

var xxx_messageInfo_EmailResp proto.InternalMessageInfo

func (m *EmailResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *EmailResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DingTalkReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RobotSecret          string   `protobuf:"bytes,2,opt,name=robotSecret,proto3" json:"robotSecret,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Text                 string   `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	IsAtAll              bool     `protobuf:"varint,5,opt,name=isAtAll,proto3" json:"isAtAll,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DingTalkReq) Reset()         { *m = DingTalkReq{} }
func (m *DingTalkReq) String() string { return proto.CompactTextString(m) }
func (*DingTalkReq) ProtoMessage()    {}
func (*DingTalkReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{4}
}

func (m *DingTalkReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DingTalkReq.Unmarshal(m, b)
}
func (m *DingTalkReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DingTalkReq.Marshal(b, m, deterministic)
}
func (m *DingTalkReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DingTalkReq.Merge(m, src)
}
func (m *DingTalkReq) XXX_Size() int {
	return xxx_messageInfo_DingTalkReq.Size(m)
}
func (m *DingTalkReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DingTalkReq.DiscardUnknown(m)
}

var xxx_messageInfo_DingTalkReq proto.InternalMessageInfo

func (m *DingTalkReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *DingTalkReq) GetRobotSecret() string {
	if m != nil {
		return m.RobotSecret
	}
	return ""
}

func (m *DingTalkReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DingTalkReq) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DingTalkReq) GetIsAtAll() bool {
	if m != nil {
		return m.IsAtAll
	}
	return false
}

type DingTalkResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DingTalkResp) Reset()         { *m = DingTalkResp{} }
func (m *DingTalkResp) String() string { return proto.CompactTextString(m) }
func (*DingTalkResp) ProtoMessage()    {}
func (*DingTalkResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_642492014393dbdb, []int{5}
}

func (m *DingTalkResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DingTalkResp.Unmarshal(m, b)
}
func (m *DingTalkResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DingTalkResp.Marshal(b, m, deterministic)
}
func (m *DingTalkResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DingTalkResp.Merge(m, src)
}
func (m *DingTalkResp) XXX_Size() int {
	return xxx_messageInfo_DingTalkResp.Size(m)
}
func (m *DingTalkResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DingTalkResp.DiscardUnknown(m)
}

var xxx_messageInfo_DingTalkResp proto.InternalMessageInfo

func (m *DingTalkResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DingTalkResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HealthReq)(nil), "notice.HealthReq")
	proto.RegisterType((*HealthResp)(nil), "notice.HealthResp")
	proto.RegisterType((*EmailReq)(nil), "notice.EmailReq")
	proto.RegisterType((*EmailResp)(nil), "notice.EmailResp")
	proto.RegisterType((*DingTalkReq)(nil), "notice.DingTalkReq")
	proto.RegisterType((*DingTalkResp)(nil), "notice.DingTalkResp")
}

func init() { proto.RegisterFile("notice.proto", fileDescriptor_642492014393dbdb) }

var fileDescriptor_642492014393dbdb = []byte{
	// 392 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x4e, 0xe3, 0x30,
	0x10, 0x55, 0xb2, 0x4d, 0xb6, 0x99, 0x76, 0x57, 0xad, 0xb7, 0x87, 0x28, 0x5a, 0xad, 0xaa, 0x9c,
	0x56, 0xda, 0x55, 0x91, 0xe0, 0x84, 0x04, 0x87, 0x4a, 0x20, 0x71, 0xa1, 0x87, 0xb4, 0x3f, 0x90,
	0xa4, 0x43, 0x31, 0x4d, 0xe2, 0x60, 0x9b, 0x42, 0x3f, 0x81, 0x1f, 0xe0, 0x2f, 0xf8, 0x47, 0x64,
	0x3b, 0x6e, 0x43, 0x11, 0x07, 0x6e, 0xf3, 0xde, 0x38, 0x33, 0xef, 0x4d, 0x1e, 0xf4, 0x2b, 0x26,
	0x69, 0x8e, 0x93, 0x9a, 0x33, 0xc9, 0x88, 0x6f, 0x50, 0xfc, 0x0f, 0x82, 0x2b, 0x4c, 0x0b, 0x79,
	0x9b, 0xe0, 0x3d, 0xf9, 0x03, 0x90, 0x17, 0x14, 0x2b, 0x39, 0x4b, 0x4b, 0x0c, 0x9d, 0xb1, 0xf3,
	0x37, 0x48, 0x5a, 0x4c, 0x2c, 0x01, 0xec, 0x63, 0x51, 0x13, 0x02, 0x9d, 0x9c, 0x2d, 0xcd, 0x3b,
	0x2f, 0xd1, 0xb5, 0x9a, 0x20, 0x90, 0x6f, 0x90, 0xeb, 0x09, 0xae, 0x99, 0xb0, 0x67, 0x48, 0x08,
	0xdf, 0x37, 0xc8, 0x05, 0x65, 0x55, 0xf8, 0x4d, 0x37, 0x2d, 0x54, 0x9d, 0x12, 0x85, 0x48, 0x57,
	0x18, 0x76, 0x4c, 0xa7, 0x81, 0xf1, 0x8b, 0x03, 0xdd, 0xcb, 0x32, 0xa5, 0x85, 0x92, 0xf8, 0x1b,
	0x02, 0x54, 0xf5, 0x62, 0x5b, 0x5b, 0x85, 0x7b, 0x82, 0xfc, 0x04, 0x57, 0xb2, 0x66, 0xad, 0x2b,
	0x19, 0x89, 0xa0, 0x7b, 0xc3, 0x59, 0xa9, 0xc5, 0x98, 0x7d, 0x3b, 0xac, 0x16, 0x8a, 0x87, 0xec,
	0x0e, 0x73, 0x69, 0x17, 0x36, 0x50, 0x19, 0x93, 0x6a, 0xbc, 0xa7, 0x69, 0x5d, 0x2b, 0x2e, 0x63,
	0xcb, 0x6d, 0xe8, 0x1b, 0x4e, 0xd5, 0xf1, 0x29, 0x04, 0x8d, 0xae, 0x4f, 0xae, 0xd1, 0xf2, 0xe4,
	0xbe, 0xf7, 0xf4, 0xec, 0x40, 0xef, 0x82, 0x56, 0xab, 0x45, 0x5a, 0xac, 0x95, 0xad, 0x11, 0x78,
	0x92, 0xad, 0xb1, 0x6a, 0x2c, 0x19, 0x40, 0xc6, 0xd0, 0xe3, 0x2c, 0x63, 0x72, 0x8e, 0x39, 0x47,
	0xd9, 0xcc, 0x68, 0x53, 0xfa, 0x3b, 0x2a, 0x0b, 0xeb, 0xce, 0x00, 0x6d, 0x00, 0x9f, 0xac, 0x2f,
	0x5d, 0x2b, 0x2d, 0x54, 0x4c, 0xe5, 0xb4, 0x28, 0xb4, 0xaf, 0x6e, 0x62, 0x61, 0x7c, 0x06, 0xfd,
	0xbd, 0x94, 0xaf, 0x3a, 0x39, 0x7e, 0x75, 0xe0, 0xc7, 0x4c, 0x67, 0x69, 0x8e, 0x7c, 0x43, 0x73,
	0x24, 0x47, 0xe0, 0x9b, 0x94, 0x90, 0xe1, 0xa4, 0xc9, 0xdc, 0x2e, 0x62, 0x11, 0x39, 0xa4, 0x44,
	0x4d, 0xfe, 0x83, 0xa7, 0xef, 0x48, 0x06, 0xb6, 0x69, 0x7f, 0x77, 0x34, 0x3c, 0x60, 0x44, 0x4d,
	0xce, 0x61, 0x60, 0xe5, 0x5e, 0xa7, 0x7c, 0xbd, 0x64, 0x8f, 0x15, 0xf9, 0x65, 0x9f, 0xb5, 0x6e,
	0x1a, 0x8d, 0x3e, 0x92, 0xa2, 0xce, 0x7c, 0x9d, 0xff, 0x93, 0xb7, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x5a, 0xc5, 0x8e, 0x75, 0x0f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoticeServiceClient is the client API for NoticeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoticeServiceClient interface {
	Health(ctx context.Context, in *HealthReq, opts ...grpc.CallOption) (*HealthResp, error)
	Email(ctx context.Context, in *EmailReq, opts ...grpc.CallOption) (*EmailResp, error)
	DingTalkMarkdown(ctx context.Context, in *DingTalkReq, opts ...grpc.CallOption) (*DingTalkResp, error)
}

type noticeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNoticeServiceClient(cc *grpc.ClientConn) NoticeServiceClient {
	return &noticeServiceClient{cc}
}

func (c *noticeServiceClient) Health(ctx context.Context, in *HealthReq, opts ...grpc.CallOption) (*HealthResp, error) {
	out := new(HealthResp)
	err := c.cc.Invoke(ctx, "/notice.NoticeService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noticeServiceClient) Email(ctx context.Context, in *EmailReq, opts ...grpc.CallOption) (*EmailResp, error) {
	out := new(EmailResp)
	err := c.cc.Invoke(ctx, "/notice.NoticeService/Email", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noticeServiceClient) DingTalkMarkdown(ctx context.Context, in *DingTalkReq, opts ...grpc.CallOption) (*DingTalkResp, error) {
	out := new(DingTalkResp)
	err := c.cc.Invoke(ctx, "/notice.NoticeService/DingTalkMarkdown", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoticeServiceServer is the server API for NoticeService service.
type NoticeServiceServer interface {
	Health(context.Context, *HealthReq) (*HealthResp, error)
	Email(context.Context, *EmailReq) (*EmailResp, error)
	DingTalkMarkdown(context.Context, *DingTalkReq) (*DingTalkResp, error)
}

// UnimplementedNoticeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNoticeServiceServer struct {
}

func (*UnimplementedNoticeServiceServer) Health(ctx context.Context, req *HealthReq) (*HealthResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedNoticeServiceServer) Email(ctx context.Context, req *EmailReq) (*EmailResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Email not implemented")
}
func (*UnimplementedNoticeServiceServer) DingTalkMarkdown(ctx context.Context, req *DingTalkReq) (*DingTalkResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DingTalkMarkdown not implemented")
}

func RegisterNoticeServiceServer(s *grpc.Server, srv NoticeServiceServer) {
	s.RegisterService(&_NoticeService_serviceDesc, srv)
}

func _NoticeService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.NoticeService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServiceServer).Health(ctx, req.(*HealthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NoticeService_Email_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServiceServer).Email(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.NoticeService/Email",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServiceServer).Email(ctx, req.(*EmailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _NoticeService_DingTalkMarkdown_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DingTalkReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeServiceServer).DingTalkMarkdown(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/notice.NoticeService/DingTalkMarkdown",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeServiceServer).DingTalkMarkdown(ctx, req.(*DingTalkReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NoticeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "notice.NoticeService",
	HandlerType: (*NoticeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _NoticeService_Health_Handler,
		},
		{
			MethodName: "Email",
			Handler:    _NoticeService_Email_Handler,
		},
		{
			MethodName: "DingTalkMarkdown",
			Handler:    _NoticeService_DingTalkMarkdown_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notice.proto",
}
