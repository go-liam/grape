// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config.proto

package config

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthReq struct {
	ClientName           string   `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthReq) Reset()         { *m = HealthReq{} }
func (m *HealthReq) String() string { return proto.CompactTextString(m) }
func (*HealthReq) ProtoMessage()    {}
func (*HealthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{0}
}

func (m *HealthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthReq.Unmarshal(m, b)
}
func (m *HealthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthReq.Marshal(b, m, deterministic)
}
func (m *HealthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthReq.Merge(m, src)
}
func (m *HealthReq) XXX_Size() int {
	return xxx_messageInfo_HealthReq.Size(m)
}
func (m *HealthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthReq.DiscardUnknown(m)
}

var xxx_messageInfo_HealthReq proto.InternalMessageInfo

func (m *HealthReq) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

type HealthResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	ServerName           string   `protobuf:"bytes,2,opt,name=serverName,proto3" json:"serverName,omitempty"`
	Version              int64    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Value                []byte   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResp) Reset()         { *m = HealthResp{} }
func (m *HealthResp) String() string { return proto.CompactTextString(m) }
func (*HealthResp) ProtoMessage()    {}
func (*HealthResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{1}
}

func (m *HealthResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResp.Unmarshal(m, b)
}
func (m *HealthResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResp.Marshal(b, m, deterministic)
}
func (m *HealthResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResp.Merge(m, src)
}
func (m *HealthResp) XXX_Size() int {
	return xxx_messageInfo_HealthResp.Size(m)
}
func (m *HealthResp) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResp.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResp proto.InternalMessageInfo

func (m *HealthResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *HealthResp) GetServerName() string {
	if m != nil {
		return m.ServerName
	}
	return ""
}

func (m *HealthResp) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *HealthResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HealthResp) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type FindOneReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindOneReq) Reset()         { *m = FindOneReq{} }
func (m *FindOneReq) String() string { return proto.CompactTextString(m) }
func (*FindOneReq) ProtoMessage()    {}
func (*FindOneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{2}
}

func (m *FindOneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneReq.Unmarshal(m, b)
}
func (m *FindOneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneReq.Marshal(b, m, deterministic)
}
func (m *FindOneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneReq.Merge(m, src)
}
func (m *FindOneReq) XXX_Size() int {
	return xxx_messageInfo_FindOneReq.Size(m)
}
func (m *FindOneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneReq proto.InternalMessageInfo

func (m *FindOneReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindOneReq) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type FindOneResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindOneResp) Reset()         { *m = FindOneResp{} }
func (m *FindOneResp) String() string { return proto.CompactTextString(m) }
func (*FindOneResp) ProtoMessage()    {}
func (*FindOneResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{3}
}

func (m *FindOneResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneResp.Unmarshal(m, b)
}
func (m *FindOneResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneResp.Marshal(b, m, deterministic)
}
func (m *FindOneResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneResp.Merge(m, src)
}
func (m *FindOneResp) XXX_Size() int {
	return xxx_messageInfo_FindOneResp.Size(m)
}
func (m *FindOneResp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneResp.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneResp proto.InternalMessageInfo

func (m *FindOneResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindOneResp) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *FindOneResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *FindOneResp) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type UpdateReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{4}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateReq) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *UpdateReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type UpdateResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResp) Reset()         { *m = UpdateResp{} }
func (m *UpdateResp) String() string { return proto.CompactTextString(m) }
func (*UpdateResp) ProtoMessage()    {}
func (*UpdateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{5}
}

func (m *UpdateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResp.Unmarshal(m, b)
}
func (m *UpdateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResp.Marshal(b, m, deterministic)
}
func (m *UpdateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResp.Merge(m, src)
}
func (m *UpdateResp) XXX_Size() int {
	return xxx_messageInfo_UpdateResp.Size(m)
}
func (m *UpdateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResp proto.InternalMessageInfo

func (m *UpdateResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpdateResp) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ListReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{6}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListReq) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type ListResp struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResp) Reset()         { *m = ListResp{} }
func (m *ListResp) String() string { return proto.CompactTextString(m) }
func (*ListResp) ProtoMessage()    {}
func (*ListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3eaf2c85e69e9ea4, []int{7}
}

func (m *ListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResp.Unmarshal(m, b)
}
func (m *ListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResp.Marshal(b, m, deterministic)
}
func (m *ListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResp.Merge(m, src)
}
func (m *ListResp) XXX_Size() int {
	return xxx_messageInfo_ListResp.Size(m)
}
func (m *ListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListResp proto.InternalMessageInfo

func (m *ListResp) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListResp) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ListResp) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*HealthReq)(nil), "configproto.HealthReq")
	proto.RegisterType((*HealthResp)(nil), "configproto.HealthResp")
	proto.RegisterType((*FindOneReq)(nil), "configproto.FindOneReq")
	proto.RegisterType((*FindOneResp)(nil), "configproto.FindOneResp")
	proto.RegisterType((*UpdateReq)(nil), "configproto.UpdateReq")
	proto.RegisterType((*UpdateResp)(nil), "configproto.UpdateResp")
	proto.RegisterType((*ListReq)(nil), "configproto.ListReq")
	proto.RegisterType((*ListResp)(nil), "configproto.ListResp")
}

func init() { proto.RegisterFile("config.proto", fileDescriptor_3eaf2c85e69e9ea4) }

var fileDescriptor_3eaf2c85e69e9ea4 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0x4f, 0x4b, 0xfb, 0x40,
	0x10, 0x25, 0x7f, 0xda, 0xfe, 0x3a, 0xed, 0xcf, 0xc3, 0x50, 0x35, 0xf4, 0x20, 0x25, 0xa7, 0x82,
	0xd0, 0x83, 0x3d, 0x29, 0xde, 0x04, 0xf1, 0x20, 0xad, 0xac, 0xf8, 0x01, 0x62, 0x32, 0xd6, 0x85,
	0x76, 0xb3, 0x66, 0x63, 0x3e, 0x84, 0x9f, 0xd8, 0xa3, 0x64, 0xb7, 0x49, 0x36, 0xa5, 0x39, 0x08,
	0xde, 0xf6, 0xcd, 0xce, 0x7b, 0xf3, 0x98, 0x79, 0x30, 0x8e, 0x53, 0xf1, 0xc6, 0x37, 0x0b, 0x99,
	0xa5, 0x79, 0x8a, 0x23, 0x83, 0x34, 0x08, 0x2f, 0x61, 0xf8, 0x40, 0xd1, 0x36, 0x7f, 0x67, 0xf4,
	0x81, 0x17, 0x00, 0xf1, 0x96, 0x93, 0xc8, 0x57, 0xd1, 0x8e, 0x02, 0x67, 0xe6, 0xcc, 0x87, 0xcc,
	0xaa, 0x84, 0x5f, 0x0e, 0x40, 0xd5, 0xad, 0x24, 0x22, 0xf8, 0x71, 0x9a, 0x98, 0xc6, 0x1e, 0xd3,
	0xef, 0x52, 0x42, 0x51, 0x56, 0x50, 0xa6, 0x25, 0x5c, 0x23, 0xd1, 0x54, 0x30, 0x80, 0x41, 0x41,
	0x99, 0xe2, 0xa9, 0x08, 0xbc, 0x99, 0x33, 0xf7, 0x58, 0x05, 0xcb, 0x9f, 0x1d, 0x29, 0x15, 0x6d,
	0x28, 0xf0, 0x35, 0xad, 0x82, 0x38, 0x81, 0x5e, 0x11, 0x6d, 0x3f, 0x29, 0xe8, 0xcd, 0x9c, 0xf9,
	0x98, 0x19, 0x10, 0xde, 0x00, 0xdc, 0x73, 0x91, 0xac, 0x05, 0x95, 0xd6, 0x11, 0x7c, 0xd1, 0x98,
	0xd6, 0x6f, 0x7b, 0x96, 0xdb, 0x9a, 0x15, 0x6e, 0x60, 0x54, 0x73, 0x95, 0xc4, 0x13, 0x70, 0x79,
	0xa2, 0xa9, 0x1e, 0x73, 0x79, 0xd2, 0x4d, 0xb4, 0x4d, 0x7a, 0x1d, 0x26, 0x7d, 0xdb, 0xe4, 0x1a,
	0x86, 0x2f, 0x32, 0x89, 0xf2, 0xdf, 0x7b, 0x6c, 0x04, 0x3d, 0x5b, 0xf0, 0x09, 0xa0, 0x12, 0xec,
	0xb8, 0x80, 0x65, 0xd1, 0xed, 0xb0, 0xd8, 0x52, 0x5c, 0xc2, 0xe0, 0x91, 0xab, 0xbc, 0xcb, 0x60,
	0x4d, 0x72, 0x6d, 0xd2, 0x0a, 0xfe, 0x19, 0xd2, 0xdf, 0x98, 0xb8, 0xfa, 0x76, 0xe0, 0xff, 0x9d,
	0x8e, 0xe5, 0x33, 0x65, 0x05, 0x8f, 0x09, 0xaf, 0xa1, 0x6f, 0xa2, 0x86, 0x67, 0x0b, 0x2b, 0xb0,
	0x8b, 0x3a, 0xad, 0xd3, 0xf3, 0xa3, 0x75, 0x25, 0xf1, 0x16, 0x06, 0xfb, 0xeb, 0x62, 0xbb, 0xa7,
	0xc9, 0xcb, 0x34, 0x38, 0xfe, 0xa1, 0x64, 0x39, 0xd8, 0x6c, 0xf8, 0x60, 0x70, 0x7d, 0xc7, 0x83,
	0xc1, 0xd6, 0x39, 0x96, 0xe0, 0x97, 0x5b, 0xc1, 0x49, 0xab, 0x61, 0xbf, 0xdd, 0xe9, 0xe9, 0x91,
	0xaa, 0x92, 0xaf, 0x7d, 0x8d, 0x97, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x36, 0x9b, 0x92,
	0xa5, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigServiceClient is the client API for ConfigService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigServiceClient interface {
	Health(ctx context.Context, in *HealthReq, opts ...grpc.CallOption) (*HealthResp, error)
	FindOne(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneResp, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error)
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error)
}

type configServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigServiceClient(cc *grpc.ClientConn) ConfigServiceClient {
	return &configServiceClient{cc}
}

func (c *configServiceClient) Health(ctx context.Context, in *HealthReq, opts ...grpc.CallOption) (*HealthResp, error) {
	out := new(HealthResp)
	err := c.cc.Invoke(ctx, "/configproto.ConfigService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) FindOne(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneResp, error) {
	out := new(FindOneResp)
	err := c.cc.Invoke(ctx, "/configproto.ConfigService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateResp, error) {
	out := new(UpdateResp)
	err := c.cc.Invoke(ctx, "/configproto.ConfigService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configServiceClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (*ListResp, error) {
	out := new(ListResp)
	err := c.cc.Invoke(ctx, "/configproto.ConfigService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfigServiceServer is the server API for ConfigService service.
type ConfigServiceServer interface {
	Health(context.Context, *HealthReq) (*HealthResp, error)
	FindOne(context.Context, *FindOneReq) (*FindOneResp, error)
	Update(context.Context, *UpdateReq) (*UpdateResp, error)
	List(context.Context, *ListReq) (*ListResp, error)
}

// UnimplementedConfigServiceServer can be embedded to have forward compatible implementations.
type UnimplementedConfigServiceServer struct {
}

func (*UnimplementedConfigServiceServer) Health(ctx context.Context, req *HealthReq) (*HealthResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Health not implemented")
}
func (*UnimplementedConfigServiceServer) FindOne(ctx context.Context, req *FindOneReq) (*FindOneResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}
func (*UnimplementedConfigServiceServer) Update(ctx context.Context, req *UpdateReq) (*UpdateResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedConfigServiceServer) List(ctx context.Context, req *ListReq) (*ListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterConfigServiceServer(s *grpc.Server, srv ConfigServiceServer) {
	s.RegisterService(&_ConfigService_serviceDesc, srv)
}

func _ConfigService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configproto.ConfigService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).Health(ctx, req.(*HealthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configproto.ConfigService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).FindOne(ctx, req.(*FindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configproto.ConfigService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/configproto.ConfigService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigServiceServer).List(ctx, req.(*ListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfigService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "configproto.ConfigService",
	HandlerType: (*ConfigServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _ConfigService_Health_Handler,
		},
		{
			MethodName: "FindOne",
			Handler:    _ConfigService_FindOne_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ConfigService_Update_Handler,
		},
		{
			MethodName: "List",
			Handler:    _ConfigService_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "config.proto",
}
