// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/data/home_site/site/interface.go

// Package mock_site is a generated GoMock package.
package mock_site

import (
	gomock "github.com/golang/mock/gomock"
	site "grape/internal/pkg/data/home_site/site"
	reflect "reflect"
)

// MockSite is a mock of Site interface
type MockSite struct {
	ctrl     *gomock.Controller
	recorder *MockSiteMockRecorder
}

// MockSiteMockRecorder is the mock recorder for MockSite
type MockSiteMockRecorder struct {
	mock *MockSite
}

// NewMockSite creates a new mock instance
func NewMockSite(ctrl *gomock.Controller) *MockSite {
	mock := &MockSite{ctrl: ctrl}
	mock.recorder = &MockSiteMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSite) EXPECT() *MockSiteMockRecorder {
	return m.recorder
}

// FindOne mocks base method
func (m *MockSite) FindOne(id int64) (*site.Model, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindOne", id)
	ret0, _ := ret[0].(*site.Model)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindOne indicates an expected call of FindOne
func (mr *MockSiteMockRecorder) FindOne(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindOne", reflect.TypeOf((*MockSite)(nil).FindOne), id)
}
